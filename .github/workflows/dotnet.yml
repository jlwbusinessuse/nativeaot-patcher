name: .NET Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  patcher-tests:
    name: Run Cosmos.Patcher.Tests

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet-version: [ 8.0.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        run: dotnet restore ./tests/Cosmos.Patcher.Tests/Cosmos.Patcher.Tests.csproj

      - name: Build Cosmos.Patcher
        run: dotnet build ./src/Cosmos.Patcher/Cosmos.Patcher.csproj

      - name: Build Cosmos.Patcher.Build
        run: dotnet build ./src/Cosmos.Patcher.Build/Cosmos.Patcher.Build.csproj
        
      - name: Build Cosmos.Patcher.Tests
        run: dotnet build ./tests/Cosmos.Patcher.Tests/Cosmos.Patcher.Tests.csproj --configuration Debug --no-restore

      - name: Run Tests
        run: dotnet test ./tests/Cosmos.Patcher.Tests/Cosmos.Patcher.Tests.csproj --no-build --configuration Debug --logger "trx;LogFileName=Cosmos.Patcher.Tests.trx"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Cosmos.Patcher.Tests-Results
          path: ./tests/Cosmos.Patcher.Tests/TestResults/Cosmos.Patcher.Tests.trx

  scanner-tests:
    name: Run Cosmos.Scanner.Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet-version: [ 8.0.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        run: dotnet restore ./tests/Cosmos.Scanner.Tests/Cosmos.Scanner.Tests.csproj

      - name: Build Cosmos.Patcher
        run: dotnet build ./src/Cosmos.Patcher/Cosmos.Patcher.csproj

      - name: Build Cosmos.Patcher.Build
        run: dotnet build ./src/Cosmos.Patcher.Build/Cosmos.Patcher.Build.csproj
        
      - name: Build Cosmos.Scanner.Tests
        run: dotnet build ./tests/Cosmos.Scanner.Tests/Cosmos.Scanner.Tests.csproj --configuration Debug --no-restore

      - name: Run Tests
        run: dotnet test ./tests/Cosmos.Scanner.Tests/Cosmos.Scanner.Tests.csproj --no-build --configuration Debug --logger "trx;LogFileName=Cosmos.Scanner.Tests.trx"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Cosmos.Scanner.Tests-Results
          path: ./tests/Cosmos.Scanner.Tests/TestResults/Cosmos.Scanner.Tests.trx

  analyzer-tests:
    name: Run Cosmos.Patcher.Analyzer.Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet-version: [ 8.0.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        run: dotnet restore ./tests/Cosmos.Patcher.Analyzer.Tests/Cosmos.Patcher.Analyzer.Tests.csproj

      - name: Build Cosmos.Patcher.Analyzer.Tests
        run: dotnet build ./tests/Cosmos.Patcher.Analyzer.Tests/Cosmos.Patcher.Analyzer.Tests.csproj --configuration Debug --no-restore

      - name: Run Tests
        run: dotnet test ./tests/Cosmos.Patcher.Analyzer.Tests/Cosmos.Patcher.Analyzer.Tests.csproj --no-build --configuration Debug --logger "trx;LogFileName=Cosmos.Patcher.Analyzer.Tests.trx"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Cosmos.Patcher.Analyzer.Tests-Results
          path: ./tests/Cosmos.Patcher.Analyzer.Tests/TestResults/Cosmos.Patcher.Analyzer.Tests.trx

  ilc-tests:
    name: Run Cosmos.ilc.Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        dotnet-version: [ 8.0.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      
      - name: Install g++
        run: sudo apt-get update && sudo apt-get install -y g++
 
      - name: Install Build Tools
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Restore Dependencies
        run: dotnet restore ./tests/Cosmos.NativeWrapper/Cosmos.NativeWrapper.csproj

      - name: Build Cosmos.Patcher
        run: dotnet build ./src/Cosmos.Patcher/Cosmos.Patcher.csproj

      - name: Build Cosmos.Patcher.Build
        run: dotnet build ./src/Cosmos.Patcher.Build/Cosmos.Patcher.Build.csproj

      - name: Build Cosmos.NativeWrapper
        run: dotnet build ./tests/Cosmos.NativeWrapper/Cosmos.NativeWrapper.csproj --configuration Debug --no-restore --verbosity detailed


      - name: Build Cosmos.ilc.Tests
        run: make -B -C ./tests/Cosmos.ilc.Tests/

      - name: Run Tests
        working-directory: tests/Cosmos.ilc.Tests/
        run: |
          ./output/main
  

